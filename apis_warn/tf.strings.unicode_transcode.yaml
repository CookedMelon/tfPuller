args:
  errors: 'An optional string from: "strict", "replace", "ignore". Defaults to "replace".Error
    handling policy when there is invalid formatting found in the input.The value
    of ''strict'' will cause the operation to produce a InvalidArgumenterror on any
    invalid input formatting. A value of ''replace'' (the default) willcause the operation
    to replace any invalid formatting in the input with thereplacement_char codepoint.
    A value of ''ignore'' will cause the operation toskip any invalid formatting in
    the input and produce no corresponding outputcharacter.'
  input: A Tensor of type string.The text to be processed. Can have any shape.
  input_encoding: 'A string.Text encoding of the input strings. This is any of the
    encodings supportedby ICU ucnv algorithmic converters. Examples: "UTF-16", "US
    ASCII", "UTF-8".'
  name: A name for the operation (optional).
  output_encoding: 'A string from: "UTF-8", "UTF-16-BE", "UTF-32-BE".The unicode encoding
    to use in the output. Must be one of"UTF-8", "UTF-16-BE", "UTF-32-BE". Multi-byte
    encodings will be big-endian.'
  replace_control_characters: An optional bool. Defaults to False.Whether to replace
    the C0 control characters (00-1F) with thereplacement_char. Default is false.
  replacement_char: An optional int. Defaults to 65533.The replacement character codepoint
    to be used in place of any invalidformatting in the input when errors='replace'.
    Any valid unicode codepoint maybe used. The default value is the default unicode
    replacement character is0xFFFD or U+65533.)Note that for UTF-8, passing a replacement
    character expressible in 1 byte, suchas ' ', will preserve string alignment to
    the source since invalid bytes will bereplaced with a 1-byte replacement. For
    UTF-16-BE and UTF-16-LE, any 1 or 2 bytereplacement character will preserve byte
    alignment to the source.
name: tf.strings.unicode_transcode
returns: A Tensor of type string.
url: https://www.tensorflow.org/api_docs/python/tf/strings/unicode_transcode
warn_message:
- arg_name or arg_desc too long
- arg_name or arg_desc too long
